apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: trigger
  data:
    trigger.sh: |-
      #!/bin/bash
      # This script is going to be fed to `oc observe`. `oc observe` should watch
      # configmaps and on every event it passes down to this script two arguments:
      # $1: namespace of the cm
      # $2: name of the cm

      set -o errexit
      set -o pipefail
      set -o nounset

      # Get the list of all deployments in the same namespace.
      deployments=$(oc get deployment -n $1 --no-headers -o name)


      triggered=()
      for d in $deployments; do
        triggeredby=$(oc get ${d} -n $1 -o go-template='{{index .metadata.annotations "deployment.kubernetes.io/triggered-by"}}')
        IFS='/' read resource name <<< $triggeredby
        if [[ "$2" == "$name" ]]; then
          triggered+=($d)
        fi
      done

      # If nothing is triggered then exit.
      if [ ${#triggered[@]} == 0 ]; then
        exit 0
      fi


      # Create a copy of configmap/$2. This should be mounted on every deployment that has a
      # configmap triggered-by annotation.
      oc get configmap $2 -n $1 -o yaml --export > /tmp/$2.data
      cmName=$2-$(md5sum /tmp/$2.data | head -c8)
      echo "Creating a copy for configmap ${2}: ${cmName}"
      cat /tmp/$2.data | sed "s/name: $2/name: $cmName/" | oc create -f -

      for d in $triggered; do
        echo "Triggering a new rollout for ${d} based on configmap ${2} update..."
        volumeName=$(oc get $d -n $1 -o jsonpath='{.spec.template.spec.volumes[0].name}')
        oc set volume $d -n $1 --add --overwrite --name=$volumeName -t configmap --configmap-name=$cmName
      done

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: observer
  spec:
    replicas: 1
    revisionHistoryLimit: 0
    template:
      metadata:
        labels:
          run: observer
      spec:
        containers:
        - image: openshift/observe:latest
          args:
          - configmaps
          - --
          - /home/configmap-rollout/trigger.sh
          name: observer
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
          - mountPath: /home/configmap-rollout
            name: trigger
        volumes:
        - configMap:
            defaultMode: 0511
            name: trigger
          name: trigger
kind: List
metadata: {}
